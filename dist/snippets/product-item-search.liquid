
{% raw %}
  <script type="text/x-template" id="product-item-search">
    <div class="index-product-item js-list-type w-full bg-white rounded-sm px-2 pt-6 pb-3.5  fb-sm:px-5 fb-sm:pb-7 fb-sm:pt-6" :data-product-id="product.productId">
      <div class="w-full h-full flex flex-col fb-sm:grid fb-sm:grid-cols-[1fr_148px] fb-sm:gap-4 fb-md:gap-5 fb-1300:gap-6">
        <div class="w-full h-full flex justify-between space-x-5 fb-sm:space-x-12 fb-sm:flex-1">
            <div class="w-25 h-full relative fb-sm:w-50">
              <div class="product-img-swiper w-full h-full swiper relative fb-sm:w-full fb-sm:h-50">
                <div class="js-swiper-button-prev left-0 shadow-[0_2px_2px_1px_rgba(0,0,0,0.06)] absolute w-6 h-6 bg-white rounded-full justify-center items-center z-2  top-10 hidden fb-sm:top-1/2 fb-sm:-translate-y-1/2">
                  <icon-media-swiper-prev />
                </div>
                <div class="swiper-wrapper">
                  <template v-for="(url, idx) in product.images">
                    <div v-if="url" :key="idx" class="swiper-slide cursor-pointer h-full flex items-center justify-center">
                      <img class="lazyload !h-auto" :data-src="url" width="400" height="400" />
                    </div>
                  </template>
                </div>
                <div class="js-swiper-button-next right-0 shadow-[0_2px_2px_1px_rgba(0,0,0,0.06)] absolute w-6 h-6 bg-white rounded-full justify-center items-center z-2  top-10 hidden fb-sm:top-1/2 fb-sm:-translate-y-1/2">
                  <icon-media-swiper-next />
                </div>
              </div>
              <div thumbsSlider="" class="product-img-swiper-thumbs swiper hidden fb-sm:block fb-sm:h-12">
                <div class="swiper-wrapper">
                  <template v-for="(url, idx) in product.images">
                    <div v-if="url" :key="idx" class="swiper-slide w-full h-full flex items-center justify-center">
                      <img class="lazyload !h-auto relative" :data-src="url" width="200" height="200" />
                    </div>
                  </template>
                </div>
              </div>
            </div>
            <div class="flex-1 flex flex-col fb-sm:justify-between">
              <div class="w-full flex flex-col fb-sm:hidden">
                <div v-if="product.brand" class="text-main text-14 font-bold mb-3 hover:underline" @click="handleClickLink">
                  {{ product.brand }}
                </div>
                <div :title="product.title" class="text-main text-14 mb-4.5 hover:underline"  @click="handleClickLink">
                  {{ product.title }}
                </div>
                <div v-if="product.manufacturerModelNumber" class="text-575757 text-12 mb-2">
                  Model: {{ product.manufacturerModelNumber }}
                </div>
                <div class="w-full flex items-center justify-start space-x-3">
                  <span class="text-main text-22 font-bold fb-sm:text-26">
                    {{ product.priceFormat }}
                  </span>
                  <template v-if="product.compareAtPrice && product.compareAtPrice > product.price">
                    <div class="flex flex-col">
                      <span class="line-through text-10 text-main">{{ product.compareAtPriceFormat }}</span>
                      <span class="text-10 text-red-600">{{ product.discountPercentage }}%OFF</span>
                    </div>
                  </template>
                  <div v-if="String(product.inventoryQuantity)" class="inventoryQuantity">
                    <span v-if="product.inventoryQuantity <= 0" class="coming-stock stock-tag">Restocking</span>
                    <span v-else-if="product.inventoryQuantity >= productDemand" class="instock-ready stock-tag">In Stock</span>
                    <span v-else class="instock-partial stock-tag">In Stock</span>
                  </div>
                </div>
              </div>
              <div class="hidden fb-sm:flex flex-col">
                <div class="w-full mb-2 space-x-3 line-clamp-1">
                 <span class="text-12254D text-14 hover:underline cursor-pointer" v-if="product.brand" @click="handleClickLink"> {{ product.brand }} </span>          
                 <span class="text-12254D text-14  hover:underline cursor-pointer" v-if="product.manufacturerModelNumber" @click="handleClickLink">Model: {{ product.manufacturerModelNumber }}</span>
                </div>
                <div class="w-full flex flex-col">
                  <a @click="handleClickLink" :href="product.productUrl" :title="product.title" class="line-clamp-2 font-bold text-16 text-main cursor-pointer hover:underline">
                    {{ product.title }}
                  </a>
                  <ul v-if="product.productCharacter" class="mt-4.5 pl-4">
                    <li class="list-disc text-12254D text-14" v-for="(character, idx) in product.productCharacter.slice(0, 3)" :key="idx">
                      <span class="cursor-pointer hover:underline" @click="handleClickLink">{{ character }} </span>
                    </li>
                  </ul>
                </div>
              </div>
              <product-item-delevery :product="product" :productDemand="productDemand"></product-item-delevery>
            </div>

        </div>
        <div class="w-full flex items-center justify-between h-8.5 fb-sm:flex-col fb-sm:h-full fb-sm:items-start">
          <div class="w-full hidden fb-sm:flex items-center justify-start space-x-3 fb-sm:flex-col fb-sm:justify-between fb-sm:items-start fb-sm:space-x-0">
            <span class="text-main text-22 font-bold fb-sm:text-26">
              {{ product.priceFormat }}
            </span>
            <template v-if="product.compareAtPrice && product.compareAtPrice > product.price">
              <div class="flex items-center justify-start">
                <span class="text-14 line-through text-main">{{ product.compareAtPriceFormat }}</span>
                <span class="text-xs text-red-600 ml-1">{{ product.discountPercentage }}%OFF</span>
              </div>
            </template>
            <div v-if="String(product.inventoryQuantity)" class="inventoryQuantity">
              <span v-if="product.inventoryQuantity <= 0" class="coming-stock stock-tag">Restocking</span>
              <span v-else-if="product.inventoryQuantity >= productDemand" class="instock-ready stock-tag">In Stock</span>
              <span v-else class="instock-partial stock-tag">In Stock</span>
            </div>
          </div>
          <div class="w-full flex justify-between space-x-5 items-center h-full fb-sm:space-x-0 fb-sm:h-auto fb-sm:block">

            <div class="w-25 fb-sm:w-full">
              <div class="w-full text-darkmain text-14 hidden fb-sm:mb-2 fb-sm:block">Quantity</div>
              <div class="w-25 fb-sm:w-full border border-D3DEF1 bg-white h-8.5 fb-sm:h-10 fb-sm:px-3 rounded-sm flex justify-between items-center px-2 space-x-0.5">
                <button type="button" @click="handleQuantityMinus" class="w-4 h-full">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.17585 6.8436H9.07417H1.20312V9.09247H9.07417H9.17585H14.6964V6.8436H9.17585Z" fill="#092A6F"></path></svg>
                </button>
                <input
                  type="text"
                  size="2"
                  v-model.number="productDemand" 
                  @change="handleQuantityChange"
                  class="flex-1 w-14 fb-sm:w-30 flex justify-center text-center items-center px-1 border-none text-20 text-main"
                >
                <button type="button" @click="handleQuantityPlus" class="w-4 h-full">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.07417 6.84361V1.22144H6.8253V6.84361H1.20312V9.09248H6.8253V14.7147H9.07417V9.09248H14.6964V6.84361H9.07417Z" fill="#08296F"></path></svg>
                </button>
              </div>
            </div>
             <el-button :loading="cartLoading" @click="handleAddToCart" class="flex fb-sm:mt-2 w-full h-full fb-sm:h-10 bg-button text-main rounded-sm items-center justify-center border-none text-14 font-bold hover:border-none hover:bg-button hover:text-main">
                <span class="loader-button__text">
                  Add to Cart
                  <icon-cart />
                </span>
              </el-button>
          </div>
        </div>
      </div>
    </div> 
  </script>
{% endraw %}

<script>
  Vue.component('product-item-search', {
    template: '#product-item-search',
    props: {
      product: {
        type: Object,
        required: true
      },
      dataLayerForm: {
        type: Object,
        required: true
      }
    },
    computed: {
      moq() {
        return +this.product.moq || 1
      },
      mpq() {
        return +this.product.mpq || 1
      },
      minQty() {
        return this.product.moq ? +this.product.moq : 1
      }
    },
    data(){
      return {
        cartLoading: false,
        productDemand: this.product.moq ? +this.product.moq : 1
      }
    },
    mounted() {
      this.initMediaSwiper();
    },
    methods: {
      handleClickLink(event) {
        event.preventDefault();
        dataLayer.push({
          event: 'select_item',
          top_price: this.dataLayerForm.top_price || '',
          bottom_price: this.dataLayerForm.bottom_price || '',
          brand_filter: this.dataLayerForm.brand_filter || '',
          ecommerce: {
            item_list_id: "search_result_click",
            items: [{
              index: this.product.calculatedIndex,
              item_id: this.product.sku,
              sku_code: this.product.sku,
              item_name: this.product.title
            }]
          }
        });
        window.location.href = this.product.productUrl;
      },
      handleQuantityPlus() {
        this.productDemand = this.productDemand + this.mpq;
        if(this.productDemand > 1000000) {
          this.productDemand = 1000000;
        }
      },

      handleQuantityMinus() {
        this.productDemand = this.productDemand - this.mpq;
        if (this.productDemand <= this.minQty) this.productDemand = this.minQty;
      },

      handleQuantityChange() {
        if (isNaN(this.productDemand) || this.productDemand < 0) {
          this.productDemand = this.moq;
        }
        this.productDemand = Math.ceil((this.productDemand - this.moq) / this.mpq) * this.mpq + this.moq;
        if (this.productDemand < this.minQty) {
          this.productDemand = this.minQty;
        } else if(this.productDemand > 1000000) {
          this.productDemand = Math.floor((1000000 - this.moq) / this.mpq) * this.mpq + this.moq;
        }
      },

      initMediaSwiper() {
        const thumbnails = new Swiper(`.js-list-type[data-product-id='${this.product.productId}'] .product-img-swiper-thumbs`, {
          spaceBetween: 6,
          slidesPerView: 3,
          freeMode: true,
          watchSlidesProgress: true,
          lazy: true,
          observer: true,
          observeParents: true,
          breakpoints: {
            740: {
              slidesPerView: 4,
            },
          },
          on: {
            init: () => {
              $(this).find('.product-img-swiper-thumbs').css('visibility', 'visible');
            },
          },
        });
        new Swiper(`.js-list-type[data-product-id='${this.product.productId}'] .product-img-swiper`, {
          touchStartPreventDefault: true,
          passiveListeners: false,
          touchAngle: 70,              
          threshold: 10,
          lazy: true,
          navigation: {
            nextEl: `.js-list-type[data-product-id='${this.product.productId}'] .js-swiper-button-next`,
            prevEl: `.js-list-type[data-product-id='${this.product.productId}'] .js-swiper-button-prev`,
          },
          thumbs: {
            swiper: thumbnails,
          },
        });
      },
      async handleAddToCart() {
        this.cartLoading = true;
        try {
          await cartFormModule.addToCart({
            variantId: this.product.variantId,
            quantity: this.productDemand
          }, () => {
            this.cartLoading = false;
          });
        } catch (error) {
          console.error(error);
          this.cartLoading = false;
        }
      },
    }
  });
</script>