<div class="w-full bg-F9F9F9 mt-2.5 fb-sm:mt-0 py-7 fb-sm:py-10 js-product-guess-{{ section.id }}"
  data-sku="{{ product.selected_or_first_available_variant.sku }}"
>
  <div class="container w-full">
    <div class="flex items-center justify-between mb-4 fb-sm:mb-6">
      <h2 class="text-20 fb-sm:text-32 font-semibold text-main">{{ section.settings.title }}</h2>
    </div>
    <div class="relative w-full mx-auto fb-hover-list js-pdpguesss-gtm">
      <div class="js-product-guess-content grid grid-cols-2 fb-sm:grid-cols-3 fb-md:grid-cols-5 gap-x-2.5 gap-y-4.5 fb-sm:gap-6"
        data-datalayer="true" 
        data-event-type="view_item_list" 
        data-list-name="recommended_product_exposure" 
        data-scope-id="{{ section.id }}"
        data-recommend-module="pdp/{{- section.settings.title -}}"
      >
        <div class="transition duration-200 relative w-full rounded h-20r fb-sm:h-27r col-span-full">
          <div class="w-full h-full bg-gray-200 pulse"></div>
        </div>
      </div>
      <div class="text-center mt-4 fb-sm:mt-6 js-view-more-container hidden">
        <div class="flex flex-col items-center space-y-4">
          <div class="flex items-center justify-center space-x-2 js-view-more-btn cursor-pointer">
            <span class="text-main text-12 fb-sm:text-16  font-bold fb-max-sm:underline fb-sm:hover:underline">View More</span>
            <svg class="w-5 h-auto fb-sm:w-5" width="21" height="12" viewBox="0 0 21 12" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12.3648 6.23386L18.6311 -9.28771e-08L20.7559 2.13416L10.9115 12L0.802708 2.19074C0.725674 2.10413 0.756718 2.05101 0.802708 1.96208C1.06141 1.45742 2.39169 0.560099 2.76422 -7.8644e-07L9.37541 6.34934L10.7557 7.63622L12.3648 6.23386Z" fill="#FABE00"></path>
            </svg>
          </div>
          <div class="js-view-less-btn cursor-pointer hidden">
            <div class="items-center justify-center flex space-x-2">
              <span class="text-main text-12 fb-sm:text-16  font-bold fb-max-sm:underline fb-sm:hover:underline">View Less</span>
                <svg class="w-5 h-auto fb-sm:w-5" width="20" height="13" viewBox="0 0 20 13" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M8.39104 5.79739L2.12478 12.0313L2.54496e-08 9.89709L9.84435 0.0312492L19.9532 9.84051C20.0302 9.92712 19.9991 9.98024 19.9532 10.0692C19.6945 10.5738 18.3642 11.4712 17.9916 12.0313L11.3804 5.68191L10.0001 4.39503L8.39104 5.79739Z" fill="#FABE00"/>
                </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
document.addEventListener('DOMContentLoaded', function() {
  class GuessProductYouLike {
    constructor(sectionId) {
      this.sectionId = sectionId;
      this.sectionElement = document.querySelector('.js-product-guess-' + sectionId);
      this.currentPage = 1;
      this.itemsPerPage = window.innerWidth >= 1199 ? 10 : window.innerWidth >= 740 ? 6 : 4;
      this.allProducts = [];
      this.isLoading = false;
      this.isExpanded = false;
      this.skuCode = this.sectionElement?.dataset?.sku || '';
    }

    createProductHtml(item) {
      return `
        <div class="w-full">
          <product-item 
            data-customer-id=""
            data-product-id="${item.productId || ''}"
            data-product-title="${(item.title || '').replace(/"/g, '&quot;')}"
            data-sku="${item.skuCode || ''}"
            data-var-id="${item.variantId || ''}"
            data-price="${item.price || ''}"
            data-datalayer-item="true"
            class="flex flex-col justify-between h-full bg-white rounded-sm"
          >
            <div class="relative overflow-hidden">
              <a href="/products/${item.skuCode}" 
                data-sku="${item.skuCode || ''}" 
                datalayer-link
                class="relative aspect-square min-h-[162px] fb-sm:min-h-[200px] flex items-center justify-center"
              >
                ${item.newTag ? `<div class="z-2 absolute left-0 top-0 fb-flex-center">
                  <span class="absolute font-bold text-sm leading-[150%] text-white left-1.5 top-3 -rotate-45">NEW</span>
                  <svg class="w-auto h-auto" width="70" height="70" viewBox="0 0 70 70" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect x="-26" y="48.9998" width="104.538" height="30" transform="rotate(-45 -26 48.9998)" fill="#ED0006"/>
                  </svg>
                </div>` : ''}
                <img 
                  class="absolute inset-0 w-full h-full object-contain p-6.5 fb-sm:p-7.5 lazyload" 
                  loading="lazy"
                  data-media-id="${item.mediaId || ''}"
                  data-src="${item.mainPic || ''}"
                  width="300"
                  height="300"
                  alt="${(item.title || '').replace(/"/g, '&quot;')}"
                >
              </a>
            </div>

            <div class="p-2 fb-sm:-mt-3 fb-sm:px-4.5 fb-sm:pt-0 fb-sm:pb-4.5 flex flex-col flex-grow justify-start">
              <span class="text-sm font-medium text-main mb-2">${item.brand || ''}</span>
              <a 
                href="/products/${item.skuCode}"
                datalayer-link=""
                data-sku="${item.skuCode || ''}"
                title="${(item.title || '').replace(/"/g, '&quot;')}"
                class="text-sm leading-6 text-575757 mb-3 line-clamp-2 hover:text-main h-12"
              >
                ${item.title || ''}
              </a>
              <div class="flex justify-between mb-4.5 flex-1">
                <div class="flex items-center flex items-end">
                  <span class="text-lg fb-sm:text-xl font-medium text-main">$${item.price || '0.00'}</span>
                </div>
              </div>
              <form 
                method="post" 
                action="/cart/add"
                class="w-full"
                enctype="multipart/form-data"
                is="product-form"
                data-recommend-module="homepage/{{- section.settings.title -}}"
                >
                <input type="hidden" name="form_type" value="product">
                <input type="hidden" name="utf8" value="âœ“">
                <input type="hidden" name="quantity" value="${item.moq || 1}">
                <input type="hidden" name="id" value="${item.variantId || ''}">
                <input type="hidden" disabled name="sku" value="${item.skuCode || ''}">
                <button is="loader-button" type="submit" class="w-full h-10 fb-sm:h-12 flex items-center justify-center rounded-sm bg-button text-main font-bold text-sm fb-sm:text-base transition-all duration-200 hover:bg-opacity-90 relative">
                  <span class="flex items-center gap-2">
                    Add to Cart
                  </span>
                  <span class="hidden" hidden>
                    <div class="inline-block">
                      <svg focusable="false" width="24" height="24" class="animate-spin" viewBox="25 25 50 50">
                        <circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="5"/>
                      </svg>
                    </div>
                  </span>
                </button>
                <input type="hidden" name="product-id" value="${item.id || ''}">
                <input type="hidden" name="section-id" value="${item.sectionId || ''}">
              </form>
      
            </div>
          </product-item>
        </div>
      `;
    }

    async fetchRecommendations() {
      try {    
        const url = `/openapi/recommend/pdp`;
        const result = await kkAjax.post(url, {
          userId: window.northsky.customerId || '',
          anonymousId: window.gaGlobal?.vid || '',
          count: 20,
          skuCode: this.skuCode
        });
        if (result.code !== 200 || !result.data || !Array.isArray(result.data) || result.data.length == 0) {
          this.sectionElement.classList.add('hidden');
          return false;
        }

        this.allProducts = result.data;
        await this.renderProducts();
        this.initViewMore();
      } catch (error) {
        console.log(error);
        this.sectionElement.classList.add('hidden');
      }
    }

    async renderProducts() {
      const startIndex = 0;
      const endIndex = this.itemsPerPage;
      const productsToShow = this.allProducts.slice(startIndex, endIndex);
      
      const fragment = document.createDocumentFragment();
      const tempDiv = document.createElement('div');
      const swiperWrapper = this.sectionElement.querySelector('.js-product-guess-content');
      
      productsToShow.forEach(item => {
        tempDiv.innerHTML = this.createProductHtml(item);
        while (tempDiv.firstChild) {
          fragment.appendChild(tempDiv.firstChild);
        }
      });
      
      swiperWrapper.innerHTML = '';
      swiperWrapper.appendChild(fragment);
    }

    initViewMore() {
      const viewMoreContainer = this.sectionElement.querySelector('.js-view-more-container');
      const viewMoreBtn = this.sectionElement.querySelector('.js-view-more-btn');
      const viewLessBtn = this.sectionElement.querySelector('.js-view-less-btn');
      
      if (this.allProducts.length > this.itemsPerPage) {
        viewMoreContainer.classList.remove('hidden');
        viewMoreBtn.addEventListener('click', () => this.loadMore());
        viewLessBtn.addEventListener('click', () => this.loadLess());
      }
    }
    customerViewMore(data) {
      if(data && data.length > 0) {
        const push_data = data.map((item, index)=> {
          return {
            item_id: item.skuCode,
            item_name: item.title,
            index: this.currentPage * this.itemsPerPage + index + 1,
          }
        })
        const uuid = DataLayerManagerFactory.getInstance('{{ section.id }}').getUUid();
        dataLayer.push({
          event: 'view_item_list',
          request_id: uuid,
          rank_type: '',
          recommend_module: "pdp/{{- section.settings.title -}}",
          ecommerce: {
            item_list_id: "recommended_product_exposure",
            items: push_data
          }
        });
      }
    }
    async loadMore() {
      if (this.isLoading) return;
      this.isLoading = true;
      const startIndex = this.currentPage * this.itemsPerPage;
      const endIndex = startIndex + this.itemsPerPage;
      const productsToShow = this.allProducts.slice(startIndex, endIndex);
      try {
        this.customerViewMore(productsToShow);
      } catch (error) {
        console.log(error);
      }
      const fragment = document.createDocumentFragment();
      const tempDiv = document.createElement('div');
      const swiperWrapper = this.sectionElement.querySelector('.js-product-guess-content');
      
      productsToShow.forEach(item => {
        tempDiv.innerHTML = this.createProductHtml(item);
        while (tempDiv.firstChild) {
          fragment.appendChild(tempDiv.firstChild);
        }
      });
      
      swiperWrapper.appendChild(fragment);
      this.currentPage++;

      if (endIndex >= this.allProducts.length) {
        this.sectionElement.querySelector('.js-view-more-btn').classList.add('hidden');
        this.sectionElement.querySelector('.js-view-less-btn').classList.remove('hidden');
      }

      this.isExpanded = true;
      this.isLoading = false;
     
    }

    async loadLess() {
      if (this.isLoading) return;
      this.isLoading = true;

      const swiperWrapper = this.sectionElement.querySelector('.js-product-guess-content');
      const productsToShow = this.allProducts.slice(0, this.itemsPerPage);
      
      const fragment = document.createDocumentFragment();
      const tempDiv = document.createElement('div');
      
      productsToShow.forEach(item => {
        tempDiv.innerHTML = this.createProductHtml(item);
        while (tempDiv.firstChild) {
          fragment.appendChild(tempDiv.firstChild);
        }
      });
      
      swiperWrapper.innerHTML = '';
      swiperWrapper.appendChild(fragment);
      this.sectionElement.querySelector('.js-view-more-btn').classList.remove('hidden');
      this.sectionElement.querySelector('.js-view-less-btn').classList.add('hidden');
      
      this.currentPage = 1;
      this.isExpanded = false;
      this.isLoading = false;

      this.sectionElement.scrollIntoView({ behavior: 'smooth' });
    }

    async init() {
      await this.fetchRecommendations();
      try {
        DataLayerManagerFactory.getInstance('{{ section.id }}').init();
      } catch (error) {
        console.log(error);
      }
    }
  }
  const guessProductYouLike = new GuessProductYouLike('{{ section.id }}');
  guessProductYouLike.init();
});
</script>
{% schema %}
{
  "name": "product Guess you like",
  "presets": [
    {
      "name": "product-guess-like"
    }
  ],
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "You Might Like"
    }
  ]
}
{% endschema %}